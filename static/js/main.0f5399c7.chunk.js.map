{"version":3,"sources":["hooks/http.hook.js","components/heroesList/heroesSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesFilters/filtersSlice.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","store/index.js","index.js"],"names":["useHttp","request","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","heroesAdapter","createEntityAdapter","selectAll","getSelectors","state","heroes","initialState","getInitialState","heroesLoadingStatus","fetchHeroes","createAsyncThunk","heroesSlice","createSlice","name","reducers","addHero","action","addOne","payload","deleteHero","removeOne","extraReducers","builder","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","filteredHeroesSelector","createSelector","filters","activeFilter","filter","hero","element","heroesFetchingError","heroesFetching","heroesFetched","HeroesListItem","id","description","onDeleteHero","elementClassName","classNames","className","src","alt","style","type","aria-label","onClick","Spinner","role","HeroesList","filteredHeroes","useSelector","dispatch","useDispatch","useCallback","then","catch","useEffect","arr","elements","length","CSSTransition","timeout","map","props","TransitionGroup","component","appear","filtersAdapter","filtersLoadingStatus","fetchFilters","filtersSlice","setActiveFilter","filtersFetching","filtersFetchingError","HeroesAddForm","options","item","i","label","value","initialValues","uuidv4","validationSchema","object","string","min","max","required","oneOf","onSubmit","values","newHero","JSON","stringify","resetForm","htmlFor","placeholder","marginTop","fontWeight","color","HeroesFilters","filterItems","App","store","configureStore","devTools","process","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0f5399c7.chunk.js","sourcesContent":["export const useHttp = () => {\n\n    const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            // setProcess('error');\n            throw e;\n        }\n    };\n\n    return {request}\n}","import { createSlice, createAsyncThunk, createEntityAdapter, createSelector } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from '../../hooks/http.hook';\r\n\r\nconst heroesAdapter = createEntityAdapter();\r\n\r\nconst {selectAll} = heroesAdapter.getSelectors(state => state.heroes);\r\n\r\nconst initialState = heroesAdapter.getInitialState({\r\n    heroesLoadingStatus: 'idle'\r\n});\r\n\r\nexport const fetchHeroes = createAsyncThunk(\r\n    'heroes/fetchHeroes',\r\n    () => {\r\n        const {request} = useHttp();\r\n        return request(\"http://localhost:3001/heroes\");\r\n    }\r\n);\r\n\r\nconst heroesSlice = createSlice({\r\n    name: 'heroes',\r\n    initialState,\r\n    reducers: {\r\n        addHero: (state, action) => { heroesAdapter.addOne(state, action.payload) },\r\n        deleteHero: (state, action) => { heroesAdapter.removeOne(state, action.payload) },\r\n    },\r\n    extraReducers: builder => {\r\n        builder\r\n            .addCase(fetchHeroes.pending, state => { state.heroesLoadingStatus = 'loading' })\r\n            .addCase(fetchHeroes.fulfilled, (state, action) => {\r\n                heroesAdapter.setAll(state, action.payload);\r\n                state.heroesLoadingStatus = 'idle';\r\n            })\r\n            .addCase(fetchHeroes.rejected, state => { state.heroesLoadingStatus = 'error' })\r\n            .addDefaultCase(() => {})\r\n    }\r\n})\r\n\r\nconst {actions, reducer} = heroesSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const filteredHeroesSelector = createSelector(\r\n    state => state.filters.activeFilter,\r\n    selectAll,\r\n    (activeFilter, heroes) => {\r\n        return activeFilter === 'all' ? heroes : heroes.filter(hero => hero.element === activeFilter)\r\n    }\r\n);\r\n\r\nexport const {\r\n    heroesFetching,\r\n    heroesFetched,\r\n    heroesFetchingError,\r\n    addHero,\r\n    deleteHero\r\n} = actions;","import * as classNames from 'classnames';\n\nconst HeroesListItem = ({id, name, description, element, onDeleteHero}) => {\n\n    let elementClassName = classNames({\n        'bg-gradient': true,\n        'bg-danger': element === 'fire',\n        'bg-primary': element === 'water',\n        'bg-success': element === 'wind',\n        'bg-secondary': element === 'earth',\n        'bg-warning': element !== 'fire' && element !== 'water' && \n                      element !== 'wind' && element !== 'earth' \n    });\n    \n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" \n                        className=\"btn-close btn-close\" \n                        aria-label=\"Close\"\n                        onClick={() => onDeleteHero(id)}></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect, useCallback } from 'react';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { heroesFetchingError, deleteHero, fetchHeroes, filteredHeroesSelector } from './heroesSlice';\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\nimport './HeroesList.scss';\n\nconst HeroesList = () => {\n    \n    const filteredHeroes = useSelector(filteredHeroesSelector);\n    const heroesLoadingStatus = useSelector(state => state.heroes.heroesLoadingStatus);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    const onDeleteHero = useCallback((id) => {\n        request(`http://localhost:3001/heroes/${id}`, 'DELETE')\n            .then(() => dispatch(deleteHero(id)))\n            .catch(() => dispatch(heroesFetchingError()))\n    }, [request]);\n\n    useEffect(() => {\n        dispatch(fetchHeroes());\n\n        // eslint-disable-next-line\n    }, []);\n\n    if (heroesLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (heroesLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return  <CSSTransition timeout={400}\n                                   classNames='card'>\n                                   <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n                    </CSSTransition>\n        }\n\n        return arr.map(({id, ...props}) => {\n            return <CSSTransition key={id}\n                                  timeout={400}\n                                  classNames='card'>\n                                      <HeroesListItem id={id} \n                                                      onDeleteHero={onDeleteHero} \n                                                      {...props}/>\n                    </CSSTransition>\n        })\n    }\n\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <TransitionGroup component='ul' appear={false}>\n            {elements}\n        </TransitionGroup>\n    )\n}\n\nexport default HeroesList;","import { createSlice, createAsyncThunk, createEntityAdapter, createSelector } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\n\r\nconst filtersAdapter = createEntityAdapter();\r\n\r\nconst initialState = filtersAdapter.getInitialState({\r\n    filtersLoadingStatus: 'idle',\r\n    activeFilter: 'all'\r\n})\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'filters/fetchFilters',\r\n    () => {\r\n        const {request} = useHttp();\r\n        return request(\"http://localhost:3001/filters\");\r\n    }\r\n);\r\n\r\nconst filtersSlice = createSlice({\r\n    name: 'filters',\r\n    initialState,\r\n    reducers: {\r\n        setActiveFilter: (state, action) => { state.activeFilter = action.payload }\r\n    },\r\n    extraReducers: builder => {\r\n        builder\r\n            .addCase(fetchFilters.pending, state => { state.filtersLoadingStatus = 'loading' })\r\n            .addCase(fetchFilters.fulfilled, (state, action) => {\r\n                filtersAdapter.setAll(state, action.payload);\r\n                state.filtersLoadingStatus = 'idle';\r\n            })\r\n            .addCase(fetchFilters.rejected, state => { state.filtersLoadingStatus = 'error' })\r\n            .addDefaultCase(() => {})\r\n    }\r\n})\r\n\r\nconst {actions, reducer} = filtersSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {selectAll} = filtersAdapter.getSelectors(state => state.filters);\r\n\r\nexport const {\r\n    filtersFetching,\r\n    filtersFetchingError,\r\n    setActiveFilter\r\n} = actions;","import {useHttp} from '../../hooks/http.hook';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport { addHero } from '../heroesList/heroesSlice';\nimport { selectAll } from '../heroesFilters/filtersSlice';\n\nconst HeroesAddForm = () => {\n\n    const filters = useSelector(selectAll);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    const onSubmitHandler = (newHero) => {\n        request(\"http://localhost:3001/heroes\", 'POST', JSON.stringify(newHero))\n            .then(data => dispatch(addHero(data)))\n    }\n\n    const options = filters.filter(item => item.name !== 'all').map(({name, label}, i) => (\n        <option key={i} value={name}>{label}</option>\n    ));\n\n    return (\n        <Formik\n            initialValues={{\n                id: uuidv4(),\n                name: '',\n                description: '',\n                element: ''\n            }}\n            validationSchema={object({\n                name: string().min(2, 'В имени должжно быть минимум 2 символа!').max(120, 'Не больше 120 символов!').required('Обязательное поле!'),\n                description: string().min(2, 'В описании должжно быть минимум 2 символа!').max(150, 'Не больше 150 символов!').required('Обязательное поле!'),\n                element: string().oneOf(['fire', 'water', 'wind', 'earth'], 'Выберите один из вариантов').required('Обязательное поле!')\n            })}\n            onSubmit={(values, actions) => {\n                onSubmitHandler(values);\n                actions.resetForm();\n            }}>\n            <Form className=\"border p-4 shadow-lg rounded\">\n                <div className=\"mb-3\">\n                    <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                    <Field \n                        type=\"text\" \n                        name=\"name\" \n                        className=\"form-control\" \n                        id=\"name\" \n                        placeholder=\"Как меня зовут?\"/>\n                    <ErrorMessage name=\"name\" component='div' style={{marginTop: '5px', fontWeight: '500', color: 'crimson'}}/>\n                </div>\n\n                <div className=\"mb-3\">\n                    <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                    <Field\n                        component='textarea'\n                        name=\"description\" \n                        className=\"form-control\" \n                        id=\"text\" \n                        placeholder=\"Что я умею?\"\n                        style={{\"height\": '130px', \"resize\": 'none'}}/>\n                    <ErrorMessage name=\"description\" component='div' style={{marginTop: '5px', fontWeight: '500', color: 'crimson'}}/>\n                </div>\n\n                <div className=\"mb-3\">\n                    <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                    <Field \n                        component='select'\n                        className=\"form-select\" \n                        id=\"element\" \n                        name=\"element\">\n                        <option >Я владею элементом...</option>\n                        {options}\n                    </Field>\n                    <ErrorMessage name=\"element\" component='div' style={{marginTop: '5px', fontWeight: '500', color: 'crimson'}}/>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n            </Form>\n        </Formik>\n    )\n}\n\nexport default HeroesAddForm;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setActiveFilter, fetchFilters, selectAll } from './filtersSlice';\n\nconst HeroesFilters = () => {\n\n    const filters = useSelector(selectAll);\n    const {filtersLoadingStatus, activeFilter} = useSelector(state => state.filters);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchFilters());\n    }, [])\n\n    if (filters.length === 0 || !filters) {\n        return <h5 className=\"text-center mt-5\">Фильтров не обнаружено!</h5>\n    }\n    if (filtersLoadingStatus === 'error') {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки!</h5>\n    }\n\n    const filterItems = filters.map(({className, label, name}, i) => {\n        return <button key={i} \n                       className={`btn ${className} ${name === activeFilter ? 'active' : ''}`}\n                       onClick={() => dispatch(setActiveFilter(name))}>{label}</button>\n    })\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {filterItems}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import {configureStore} from '@reduxjs/toolkit';\nimport heroes from '../components/heroesList/heroesSlice';\nimport filters from '../components/heroesFilters/filtersSlice';\n\n// const reducer = combineReducers({heroes: heroesReducer, filters: filtersReducer});\n\n// const store = createStore(reducer, compose(\n//     applyMiddleware(ReduxThunk),\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// ));\n\nconst store = configureStore({\n    reducer: {heroes, filters},\n    devTools: process.env.NODE_ENV !== 'production'\n});\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.createRoot(document.getElementById('root'))\n.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}